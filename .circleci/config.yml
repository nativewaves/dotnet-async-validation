version: 2.1
executors:
    nativewaves-docker:
        docker:
            - image: nativewaves/cicd-nwtools-ubuntu:latest
              auth:
                  username: nwgeneral
                  password: $DOCKERHUB_TOKEN_NWGENERAL

commands:
    dotnet_test:
        description: Command to run .net test projects and save results as artifacts
        parameters:
            working-dir:
                type: string
            no_output_timeout:
                type: string
                default: 10m
        steps:
            - run:
                  working-directory: <<parameters.working-dir>>
                  name: Unit-Tests @ <<parameters.working-dir>>
                  no_output_timeout: <<parameters.no_output_timeout>>
                  command: |
                      echo working dir: $(pwd)
                      ls $(pwd)
                      set +e
                        mkdir TestResults
                        $(dotnet test -c Release --logger 'console;verbosity=detailed' --logger 'trx;verbosity=detailed' --results-directory TestResults >&2 || exit $?)
                        retcode=$?
                        echo dotnet test returned: $retcode
                      set -e

                      export PATH=$PATH:/home/circleci/.dotnet/tools
                      trx2junit 'TestResults/*.trx'

                      if [ $retcode -ne 0 ]; then
                        echo 'Tests failed'
                        exit $retcode
                      else
                        echo 'Tests passed'
                      fi
            - store_test_results:
                  path: "<<parameters.working-dir>>/TestResults"
            - store_artifacts:
                  path: "<<parameters.working-dir>>/TestResults"
                  destination: TestResults

    dotnet_build:
        description: .net projects build command - also runs tests
        parameters:
            working-dir:
                type: string
            unittest-dir:
                type: string
                default: "" # uses working-dir if not set
            runtime:
                type: string
                default: linux-arm64
            no_output_timeout:
                type: string
                default: 10m
        steps:
            - run:
                  working-directory: <<parameters.working-dir>>
                  name: Build @ <<parameters.working-dir>>
                  no_output_timeout: <<parameters.no_output_timeout>>
                  command: |
                      echo working dir: $(pwd)
                      dotnet publish . --framework net7.0 -c Release -p:PublishDir=./build/publish --runtime <<parameters.runtime>> --no-self-contained
                  #   dotnet publish . --framework net8.0 -c Release -p:PublishDir=./build/publish --runtime <<parameters.runtime>> --no-self-contained
            - dotnet_test:
                  working-dir: <<#parameters.unittest-dir>><<parameters.unittest-dir>><</parameters.unittest-dir>><<^parameters.unittest-dir>><<parameters.working-dir>><</parameters.unittest-dir>>
    nuget-pack-push:
        parameters:
            working-dir:
                type: string
            is-release:
                type: boolean
            package-url:
                type: string
                default: https://nuget.pkg.github.com/nativewaves
        steps:
            - run:
                  working-directory: <<parameters.working-dir>>
                  name: Nuget package
                  command: |
                      dotnet pack --p:PackageOutputPath=./nuget --include-source -p:SymbolPackageFormat=snupkg <<#parameters.is-release>>-c Release<</parameters.is-release>>
                      dotnet pack --p:PackageOutputPath=./nuget --include-source -p:SymbolPackageFormat=snupkg <<#parameters.is-release>>-c Release<</parameters.is-release>>
            - run:
                  working-directory: <<parameters.working-dir>>
                  name: Package push
                  command: |
                      dotnet nuget push $(find . -iname *.nupkg | xargs) -s <<parameters.package-url>> -k $GITHUB_TOKEN --skip-duplicate

jobs:
    build-and-deploy-nuget:
        environment:
            PIPELINE_NUM: <<pipeline.number>>
        parameters:
            working-dir:
                type: string
            unittest-dir:
                type: string
            is-release:
                type: boolean
                default: false
        resource_class: nativewaves/cicd-build
        executor: nativewaves-docker
        steps:
            - checkout
            - dotnet_build:
                  working-dir: <<parameters.working-dir>>
                  unittest-dir: <<parameters.unittest-dir>>
            - nuget-pack-push:
                  working-dir: <<parameters.working-dir>>
                  is-release: <<parameters.is-release>>

parameters: {}
workflows:
    prod-build:
        when: # master branch
            or:
                - equal: [master, <<pipeline.git.branch>>]
        jobs:
            - build-and-deploy-nuget:
                  working-dir: src/AsyncValidation
                  unittest-dir: src/AsyncValidation.Test
                  is-release: true
    dev-build:
        when:
            not:
                equal: [master, <<pipeline.git.branch>>]
        jobs:
            - build-and-deploy-nuget:
                  working-dir: src/AsyncValidation
                  unittest-dir: src/AsyncValidation.Test
